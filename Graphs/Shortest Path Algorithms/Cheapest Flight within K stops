class Solution {
public:
    
//     Based on bellman-ford algorithm
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k)     {
        vector<int> dist(n, INT_MAX);
        vector<int> temp(n, INT_MAX);
        dist[src] = 0;
        
        for(int i = 0; i < k+1; i++){
            for(auto flight: flights){
                int u = flight[0];
                int v = flight[1];
                int w = flight[2];
                
                if(dist[u] != INT_MAX && temp[v] > dist[u] + w){
                    temp[v] = dist[u] + w;
                }
            }
            dist = temp;
        }
        if(dist[dst] == INT_MAX){
            return -1;
        }
        return dist[dst];
        
    }
};
