#include <bits/stdc++.h>
#include <chrono>
using namespace std;
using namespace chrono;

#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define MOD 1000000007
#define MOD1 998244353
#define INF 1e18
#define nline "\n"
#define ff first
#define ss second
#define PI 3.141592653589793238462
//setbits macro
// typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update > pbds; // find_by_order, order_of_key
int mod;

typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;

#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x << " " ; _print(x); cerr << endl;
#else
#define debug(x)
#endif

void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}

//Templates for debugging pair,vector,set,multiset,map
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.ff); cerr << ","; _print(p.ss); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
// template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(unordered_map<T,list<pair<T,T>>> v){ cerr << "["; for(auto p : v){ int part1 = p.first; list<pair<T,T>> part2 = p.second; cerr << part1 << "->"; for(auto ele:part2){ int ele1 = ele.first; int ele2 = ele.second; cerr << '(' << ele1 << " " << ele2 << ')' << ","; } } cerr << "]"; }
template <class T> void _print(unordered_map<T,vector<T>> v){ cerr << "["; for(auto p : v){ int part1 = p.first; vector<T> part2 = p.second; cerr << part1 << "->"; for(auto ele:part2){ cerr << '(' << ele << ')' << ","; } } cerr << "]"; }
template <class T, class V> void _print(vector<pair <T, V>> v) {cerr << "[ ";for(auto p : v){cerr << p.first << "-" << p.second << ","; } cerr << "]";}


//Fenwick/ Binary Indexed Tree data structure

struct BIT{
  ll n;
  vector<ll> bit;
  BIT(ll N){
    n = N;
    bit.assign(n+1,0);
  }

  void update(ll i, ll x){
    for(; i<=n; i = i+ (i & -i)){
      bit[i] = (bit[i] + x) % mod;
    }
  }

  int query_sum(ll i){
    ll ret = 0;
    for(; i>0; i = i - (i & -i)){
      ret = (ret + bit[i]) % mod;
    }
    return ret;
  }

  // Update from range l to r based on diff arrays

  void update(ll l, ll r, ll v){
    update(l,v);
    if(r != n){
      update(r+1, -v);
    }
  }

};

//--------------------------------****TEMPLATE ENDS HERE****-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




int main()
{

  fastio();

  #ifndef ONLINE_JUDGE
  freopen("Error.txt", "w", stderr);
  #endif

  #ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  #endif

    int n,q;
	cin>>n>>q;
    
    ll a[n+5], k[q+5], e;
    a[0] = k[0] = 0;
    for(int i=1; i<=n; i++){
        cin >> e;
        a[i] = a[i-1] + e;
    }
    for(int i=1; i<=q; i++){
        cin >> e;
        k[i] = k[i-1] + e;
    }

    ll t = 1, thor = 0;
    while(q--){
        ll up = upper_bound(a+1, a+n+1, k[t] - thor)- a - 1;
        if(up >= n){
            up = 0;
            thor = k[t];
        }
        cout << max(n - up, 0ll) << "\n"; 
        t++;
    }
  
    

  return 0;

}
